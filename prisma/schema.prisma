generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                           Int               @id @default(autoincrement())
  nombre                       String
  correo                       String            @unique
  contrasena                   String
  rol                          Rol
  createdAt                    DateTime?         @default(now()) @db.Timestamp(6)
  updatedAt                    DateTime?         @default(now()) @updatedAt @db.Timestamp(6)
  comerciantesActualizados     Comerciante[]     @relation("ComercianteUpdatedBy")
  establecimientosActualizados Establecimiento[] @relation("EstablecimientoUpdatedBy")
}

model Municipio {
  id           Int           @id @default(autoincrement())
  nombre       String        @unique
  comerciantes Comerciante[]
}

model Comerciante {
  id               Int               @id @default(autoincrement())
  nombre           String
  telefono         String?
  correo           String?
  fechaRegistro    DateTime?         @default(now()) @db.Timestamp(6)
  estado           Boolean?          @default(true)
  updatedAt        DateTime?         @default(now()) @updatedAt @db.Timestamp(6)
  municipioId      Int
  actualizadoPorId Int
  municipio        Municipio         @relation(fields: [municipioId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_municipio")
  actualizadoPor   Usuario           @relation("ComercianteUpdatedBy", fields: [actualizadoPorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_actualiza_comerciante")
  establecimientos Establecimiento[]
}

model Establecimiento {
  id               Int         @id @default(autoincrement())
  nombre           String
  ingresos         Decimal     @db.Decimal(10, 2)
  numeroEmpleados  Int
  comercianteId    Int
  updatedAt        DateTime?   @default(now()) @updatedAt @db.Timestamp(6)
  actualizadoPorId Int
  comerciante      Comerciante @relation(fields: [comercianteId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_comerciante")
  actualizadoPor   Usuario     @relation("EstablecimientoUpdatedBy", fields: [actualizadoPorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_actualiza_establecimiento")
}

enum Rol {
  ADMIN
  AUXILIAR
}
